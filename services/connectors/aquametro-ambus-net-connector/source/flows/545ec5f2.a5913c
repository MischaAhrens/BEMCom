[
    {
        "id": "545ec5f2.a5913c",
        "type": "tab",
        "label": "Parse raw_message",
        "disabled": false,
        "info": "Parse an object from the received raw sensor datapoint data.\n\n# Receives\n... a message structured like this:\n```\nmsg = {\n    \"payload\": {\n        \"raw_message\": <the raw data>,\n        \"timestamp\": <milliseconds since epoch>\n    }\n}\n```\nE.g.\n```\nmsg = {\n    \"payload\": {\n        \"raw_message\": \"device_1:{sensor_1:2.12,sensor_2:3.12}\",\n        \"timestamp\": 1573680749000\n    }\n}\n```\n\n# Should return\n... a message containing the a parsed version of the raw data, structured like this:\n```\nmsg = {\n    \"payload\": {\n        \"parsed_message\": <the parsed data as object>,\n        \"timestamp\": <milliseconds since epoch>\n    }\n}\n```\nE.g.\n```\nmsg = {\n    \"payload\": {\n        \"parsed_message\": {\n            \"device_1\": {\n                \"sensor_1\": \"2.12\",\n                \"sensor_2\": \"3.12\"\n            }\n        },\n        \"timestamp\": 1573680749000\n    }\n}\n```"
    },
    {
        "id": "b29cb5a0.079da8",
        "type": "link in",
        "z": "545ec5f2.a5913c",
        "name": "flow \"Parse raw_message\" in",
        "links": [
            "5d6ccddc.75fcd4"
        ],
        "x": 155,
        "y": 40,
        "wires": [
            [
                "71c054e8.136a6c"
            ]
        ]
    },
    {
        "id": "e15eb503.006e98",
        "type": "link out",
        "z": "545ec5f2.a5913c",
        "name": "flow \"Parse raw_message\" out",
        "links": [
            "498bc454.265e5c"
        ],
        "x": 915,
        "y": 120,
        "wires": []
    },
    {
        "id": "ef8b1578.a2ed58",
        "type": "converter",
        "z": "545ec5f2.a5913c",
        "name": "Convert ISO-8859-1 to UTF-8",
        "from": "ISO-8859-1 ",
        "x": 630,
        "y": 40,
        "wires": [
            [
                "ed89d5c6.cb5bf8"
            ]
        ]
    },
    {
        "id": "ed89d5c6.cb5bf8",
        "type": "xml",
        "z": "545ec5f2.a5913c",
        "name": "parse xml anwser to json",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 930,
        "y": 40,
        "wires": [
            [
                "6b1a1f6d.5468a"
            ]
        ]
    },
    {
        "id": "71c054e8.136a6c",
        "type": "change",
        "z": "545ec5f2.a5913c",
        "name": "raw_message to payload",
        "rules": [
            {
                "t": "set",
                "p": "payload_store",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload_store.raw_message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 40,
        "wires": [
            [
                "ef8b1578.a2ed58"
            ]
        ]
    },
    {
        "id": "ac85e461.ebd108",
        "type": "change",
        "z": "545ec5f2.a5913c",
        "name": "Restore output message format",
        "rules": [
            {
                "t": "set",
                "p": "payload_store.parsed_message",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload_store",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload_store",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "e15eb503.006e98"
            ]
        ]
    },
    {
        "id": "6b1a1f6d.5468a",
        "type": "function",
        "z": "545ec5f2.a5913c",
        "name": "Add meter number and reduce bloat",
        "func": "/*\nThe JSON object received at this point starts with something like this:\n{\n    \"soap:Envelope\": {\n        \"$\": {\n            \"xmlns:soap\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n            \"xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"xmlns:xsd\": \"http://www.w3.org/2001/XMLSchema\"\n        },\n        \"soap:Body\": [\n            {\n                \"getMeterResponse\": [\n                    {\n                        \"$\": {\n                            \"xmlns\": \"http://tempuri.org/\"\n                        },\n                        \"getMeterResult\": [\n                            {\n                                \"primAddr\": [\n                                    \"2\"\n                                ],\n                                \"deviceName\": [\n                                    \"FZI  Forschugszentrum Informatik Karlsr\"\n                                ],\n                                \"desc\": [\n                                    \"WMZ Rueck\"\n                                ],\n                                \"type\": [\n                                    \"CALEC ST\"\n                                ],\n                                \"info\": [\n                                    \"AQUAMETRO MESSTECHNIK GmbH\"\n                                ],\n                                \"supplier\": [\n                                    \"AMT\"\n                                ],\n                                \"serial\": [\n                                    \"05331543\"\n                                ],\n                                \"medium\": [\n                                    \"Heat\"\n                                ],\n                                \"instPoint\": [\n                                    \"Cold side\"\n                                ],\n                                \"readout\": [\n                                    \"09.01.20 17:33\"\n                                ],\n                                \"status\": [\n                                    \"ok\"\n                                ],\n                                \"opTime\": [\n                                    {\n                                        \"value\": [\n                                            \"   46753\"\n                                        ],\n                                        \"unit\": [\n                                            \"h\"\n                                        ]\n                                    }\n                                ],\n                                \"errorTime\": [\n                                    {\n                                        \"value\": [\n                                            \"       0\"\n                                        ],\n                                        \"unit\": [\n                                            \"h\"\n                                        ]\n                                    }\n                                ],\n                                \"channel\": [\n                                    {\n                                        \"Channel\": [\n                                            {\n                                                \"P\": [\n                                                    {\n                                                        \"value\": [\n                                                            \"    0.000\"\n                                                        ],\n\n\nThis message has two issues.\n1) It will generate a lot of bloat keys in the flat message, e.g. starting with\n\"soap:Envelope__soap:Body__0__getMeterResponse__0__getMeterResult\"\n2) The meter number is not part of the flattend keys, which makes the values \nof all meters have identical keys.\n\nThe following code fixes both issues.\n*/\nlet payload = msg.payload\nlet meter_result = payload[\"soap:Envelope\"][\"soap:Body\"][0][\"getMeterResponse\"][0][\"getMeterResult\"][0]\nlet meter_number = meter_result[\"primAddr\"]\n\n// Erase the old dict and add the shortend one with the meter number.\nmsg.payload = {}\nmsg.payload[\"meter_\" + meter_number] = meter_result\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "ac85e461.ebd108"
            ]
        ]
    }
]
