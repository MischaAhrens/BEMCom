# Generated by Django 3.1.5 on 2021-08-05 21:15

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api_main', '0005_remove_datapoint_origin_description'),
    ]

    operations = [
        migrations.AddField(
            model_name='datapointvalue',
            name='_value_bool',
            field=models.BooleanField(blank=True, default=None, help_text='Similar to value but an internal bool representation to store boolean values more efficiently.', null=True),
        ),
        migrations.AlterField(
            model_name='datapoint',
            name='example_value',
            field=models.JSONField(editable=False, help_text='One example value for this datapoint. Should help admins while mangeing datapoints, i.e. to specify the correct data format.', null=True),
        ),
        migrations.AlterField(
            model_name='datapoint',
            name='last_value',
            field=models.JSONField(blank=True, default=None, help_text='The last value received for the datapoint. We store all values including numeric as strings as this simplfies the logic significantly and prevents unintended side effects, e.g. data loss if the data format field is changed.', null=True),
        ),
        migrations.AlterField(
            model_name='datapointvalue',
            name='value',
            field=models.JSONField(blank=True, default=None, help_text='The value part of the DatapointValue message.', null=True),
        ),
        migrations.AlterField(
            model_name='datapointvalue',
            name='value_float',
            field=models.FloatField(blank=True, default=None, help_text='Similar to value but an internal float representation to store numeric values more efficiently.', null=True),
        ),
        migrations.RenameField(
            model_name='datapointvalue',
            old_name='value_float',
            new_name='_value_float',
        ),
        migrations.AddConstraint(
            model_name='datapoint',
            constraint=models.UniqueConstraint(fields=('connector', 'key_in_connector'), name='Datapoint key_in_connector and connector unique together'),
        ),
    ]
